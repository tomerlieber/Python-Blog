{"version":3,"sources":["Header.js","img/home-bg.jpg","pages/HomePage.js","img/about-bg.jpg","pages/AboutPage.js","components/ArticlesList.js","pages/article-content.js","pages/content/PythonBasics.js","pages/content/Comments.js","pages/content/ZenOfPython.js","pages/content/BasicTypes.js","pages/content/BasicOutput.js","pages/content/BasicUserInput.js","pages/content/CallingFunctions.js","pages/content/CreatingFunctions.js","pages/content/UsingModules.js","pages/content/CreatingModules.js","img/articles-bg.jpg","pages/ArticlesListPage.js","components/CommentsList.js","components/UpvotesSection.js","components/AddCommentForm.js","img/not-found-bg.jpg","pages/NotFoundPage.js","img/posts.jpg","pages/ArticlePage.js","NavBar.js","App.js","reportWebVitals.js","index.js"],"names":["Header","heading","subheading","image","className","style","backgroundImage","HomePage","Background","id","AboutPage","href","target","rel","ArticlesList","articles","map","article","key","to","name","title","introduction","content","ArticlesListPage","articleContent","CommentsList","comments","comment","username","text","UpvotesSection","articleName","upvotes","setArticleInfo","upvoteArticle","a","fetch","method","result","json","body","onClick","aria-hidden","AddCommentForm","useState","setUsername","commentText","setCommentText","addComment","JSON","stringify","headers","htmlFor","type","value","onChange","event","rows","NotFoundPage","ArticlePage","match","params","find","articleInfo","useEffect","window","scrollTo","fetchData","otherArticles","filter","NavBar","data-toggle","data-target","aria-controls","aria-expanded","aria-label","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8MAmBeA,G,MAhBA,SAAC,GAAD,IAAEC,EAAF,EAAEA,QAASC,EAAX,EAAWA,WAAYC,EAAvB,EAAuBA,MAAvB,OACX,yBAAQC,UAAU,WAAWC,MAAO,CAACC,gBAAiB,OAASH,EAAQ,KAAvE,UACI,qBAAKC,UAAU,YACf,qBAAKA,UAAU,YAAf,SACI,qBAAKA,UAAU,MAAf,SACI,qBAAKA,UAAU,6BAAf,SACA,sBAAKA,UAAU,eAAf,UACI,6BAAKH,IACL,sBAAMG,UAAU,aAAhB,SAA8BF,kBCXnC,MAA0B,oCCoB1BK,EAhBE,kBACb,qCAEA,cAAC,EAAD,CAAQN,QAAS,cAAeC,WAAY,yBAA0BC,MAAOK,IAC7E,qBAAKC,GAAG,YAAR,SACI,uWCTO,MAA0B,qCCmB1BC,EAfG,kBACd,qCAEA,cAAC,EAAD,CAAQT,QAAS,WAAYC,WAAY,oBAAqBC,MAAOK,IACrE,qBAAKC,GAAG,YAAR,SACI,oNAIU,mBAAGE,KAAK,4CAA4CC,OAAO,SAASC,IAAI,sBAAxE,gCAJV,gC,OCKOC,EAXM,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACjB,mCACCA,EAASC,KAAI,SAACC,EAASC,GAAV,OACV,eAAC,IAAD,CAAMd,UAAU,oBAA8Be,GAAE,iBAAYF,EAAQG,MAApE,UACI,6BAAKH,EAAQI,QACb,4BAAIJ,EAAQK,iBAFyBJ,SCoElCH,EA/DE,CACb,CACIK,KAAM,gBACNC,MAAO,gBACPC,aAAc,+EACdC,QCda,kBACjB,mCAEA,+BACI,oDAAsB,mBAAGZ,KAAK,sBAAsBC,OAAO,SAASC,IAAI,sBAAlD,iCAAtB,2BACA,8CACA,qGAA6E,uBAAK,4DAClF,4IACA,yJACA,iDAAmB,uBAAnB,iEDOJ,CACIO,KAAM,WACNC,MAAO,WACPC,aAAc,mNACdC,QEpBS,kBACb,qCAEA,kPACA,2EACA,+BACI,+BACI,4CADJ,4HAC+I,uBAC3I,gFAIJ,+BACI,2CADJ,oGACsH,uBAClH,kDACc,uBADd,sBAEmB,uBAFnB,6BFQR,CACIH,KAAM,gBACNC,MAAO,gBACPC,aAAc,oNACdC,QG1BY,kBAChB,qCAEA,qCAAO,8CAAP,uOAGI,mBAAGZ,KAAK,8CAA8CC,OAAO,SAASC,IAAI,sBAA1E,mBAHJ,OAIA,6FACA,+BACI,+BACI,8DAAoC,uBADxC,+KAEgL,uBAC5K,yCACK,uBADL,wBAEqB,uBAFrB,uBAGoB,uBAHpB,QAIK,uBAJL,wBAKqB,uBALrB,UAOO,uBAPP,8BAWJ,+BACI,4DAAkC,uBADtC,kKAGgB,uBACZ,0CACM,uBADN,6GAE0G,uBAF1G,UAIO,uBAJP,sBAKmB,uBALnB,gDAM6C,uBAN7C,gCAO6B,uBAP7B,oBAWJ,+BACI,mDAAyB,uBAD7B,iIAEkI,8CAFlI,wDAGgB,uBACZ,+CACW,uBADX,SAEM,uBAFN,cAGW,uBAHX,cAIW,uBAJX,cAKW,uBALX,YAOS,uBAPT,UAQO,uBARP,WASQ,uBATR,WAUQ,uBAVR,WAWQ,qCHzBhB,CACIO,KAAM,cACNC,MAAO,wBACPC,aAAc,4GACdC,QIhCW,kBACf,qCAEA,2IACA,2WACA,+BACI,+BACI,0CACA,qFACA,iCACI,uBACA,wCAAc,uBAFlB,WAGY,uBACR,uBACA,qCAAW,uBALf,yBAM0B,uBAN1B,UAUJ,+BACI,wDACA,sPAEY,mBAAGZ,KAAK,oDAAoDC,OAAO,SAASC,IAAI,sBAAhF,iCAFZ,OAIA,iCACI,uBACA,wCAAc,uBAFlB,aAGc,uBAHd,aAIc,uBACV,uBACA,qCAAW,uBANf,yBAO0B,uBAP1B,mBAWJ,+BACI,iDACA,0HAA4F,sEAC5F,iCACI,uBACA,wCAAc,uBAFlB,cAGe,uBACX,uBACA,qCAAW,uBALf,8BAM+B,uBAN/B,eAUJ,+BACI,yCACA,qCAAO,uCAAP,6HACA,iCACI,uBACA,wCAAc,uBAFlB,sBAGuB,uBACnB,uBACA,qCAAW,uBALf,gCAMiC,uBANjC,qBAOsB,6BAG1B,+BACI,yCACA,qCAAO,wCAAP,+FAAoH,wCAApH,OAAyI,yCAAzI,OACA,iCACI,uBACA,wCAAc,uBAFlB,cAGe,uBACX,uBACA,qCAAW,uBALf,qBAMsB,uBANtB,qBJ/BR,CACIO,KAAM,eACNC,MAAO,eACPC,aAAc,sIACdC,QKtCY,kBAChB,qCAEA,qCAAO,2CAAP,+HACA,8BACI,0CADJ,8BAC+C,uBAC3C,iCACA,uBADA,8BAE2B,uBAF3B,cAGW,uBACX,uBAJA,oBAKiB,uBALjB,KAME,6BAGN,8BACI,0CADJ,wCACyD,uBACrD,iCACA,uBADA,wCAEqC,uBAFrC,oBAGiB,uBACjB,uBAJA,8CAK2C,uBAL3C,kCASJ,mJACA,0EAC0C,uBAD1C,kBAII,oNACA,mEAC+B,uBAD/B,+BAE4B,uBAF5B,sBAGmB,uBAAK,0BAE5B,8BACI,0CADJ,8CAC+D,uBAC3D,iSACA,uFACiE,uBADjE,UAIA,0ILJJ,CACIH,KAAM,mBACNC,MAAO,mBACPC,aAAc,wHACdC,QM5Ce,kBACnB,qCAEA,gIAAkG,2CAAlG,sBACA,8BACI,0CAAgB,uBADpB,6CAE8C,uBAC1C,qEACqC,uBADrC,wBAEyB,uBAFzB,gCAGiC,uBAHjC,mBAIoB,uBAJpB,QAKS,uBALT,oBASJ,8BACI,0CAAgB,uBADpB,wEAEyE,uBACrE,4EAC4C,uBAD5C,gCAEiC,uBAFjC,yBAG0B,uBAH1B,oBAOJ,8BACI,0CAAgB,uBADpB,OAEQ,2CAFR,mIAG4E,yCAH5E,kGAIiG,uBAC7F,0EAC0C,uBAD1C,oEAEqE,uBAFrE,qBAGsB,uBAHtB,gDNeJ,CACIH,KAAM,oBACNC,MAAO,oBACPC,aAAc,gLACdC,QOlDiB,kBACrB,qCAEA,+MACA,8BACI,mDAAyB,uBAD7B,qEAEsE,uBAClE,8CAEJ,8BACI,mEAAyC,uBAD7C,mHAEoH,uBAChH,oEAEJ,8BACI,+FAAqE,uBADzE,kCAEmC,0CAFnC,4DAE+G,6DAF/G,IAEsJ,uBAClJ,+CACe,uBADf,iCPmCJ,CACIH,KAAM,qBACNC,MAAO,qBACPC,aAAc,sJACdC,QQxDkB,kBACtB,qCAEA,oHAAsF,oDAAtF,wDACA,8BACI,2CAAiB,uBADrB,mKAIA,oDACA,+BACI,sHACA,2GACA,sGACA,uFAEJ,8BACI,yCAAe,uBACf,uDACuB,uBADvB,yCAKJ,8BACI,wFADJ,gBAC+E,uBAD/E,8IAIA,4DAC4B,uBAD5B,wCAEyC,uBAFzC,qCAGsC,uBAHtC,qDAMA,8BACI,+DADJ,8CACuF,uBADvF,OAEQ,uBACJ,qDAHJ,+GR0BA,CACIH,KAAM,gBACNC,MAAO,gBACPC,aAAc,iEACdC,QS9Da,kBACjB,qCAEA,8BACI,2CAAiB,uBADrB,yDAIA,8BACI,6CAAmB,uBADvB,uCAEwC,0CAFxC,cAEsE,uBAClE,+CACW,uBADX,4BAKJ,mHACsF,wCADtF,YACgH,uBAC5G,wDACoB,uBADpB,2BT+CJ,CACIH,KAAM,mBACNC,MAAO,mBACPC,aAAc,kFACdC,QUpEgB,kBACpB,qCAEA,8BAAG,gDAAsB,uBAAzB,qFAGA,8BACI,yCAAe,uBADnB,iDAIA,uBACA,qDACqB,uBADrB,2CAIA,uFAC0D,uBACtD,uBAFJ,0GCjBW,MAA0B,wCCiB1BC,EAXU,kBACrB,qCACA,cAAC,EAAD,CAAQvB,QAAS,WAAYC,WAAY,wCAAyCC,MAAOK,IACzF,qBAAKC,GAAG,YAAR,SAEI,cAAC,EAAD,CAAcM,SAAUU,U,gCCGjBC,EAZM,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACjB,qCACA,6BAAI,4CACHA,EAASX,KAAI,SAACY,EAASV,GAAV,OACV,sBAAKd,UAAU,UAAf,UACI,6BAAKwB,EAAQC,WACb,4BAAID,EAAQE,SAFcZ,UCcvBa,EAlBQ,SAAC,GAA8C,IAA5CC,EAA2C,EAA3CA,YAAaC,EAA8B,EAA9BA,QAASC,EAAqB,EAArBA,eACtCC,EAAa,uCAAG,8BAAAC,EAAA,sEACGC,MAAM,cAAD,OAAeL,EAAf,WAAqC,CAC3DM,OAAQ,SAFM,cACZC,EADY,gBAICA,EAAOC,OAJR,OAIZC,EAJY,OAKlBP,EAAeO,GALG,2CAAH,qDAOnB,OACI,sBAAKrC,UAAU,YAAYK,GAAG,kBAA9B,UACI,yBAAQiC,QAAS,kBAAMP,KAAiB/B,UAAU,wBAAlD,UACI,sBAAMA,UAAU,4BAA4BuC,cAAY,SAD5D,WAGA,mDAAsBV,EAAtB,gBCoBGW,EAjCQ,SAAC,GAAqC,IAAnCZ,EAAkC,EAAlCA,YAAaE,EAAqB,EAArBA,eAAqB,EACxBW,mBAAS,IADe,mBACjDhB,EADiD,KACvCiB,EADuC,OAElBD,mBAAS,IAFS,mBAEjDE,EAFiD,KAEpCC,EAFoC,KAIlDC,EAAU,uCAAG,8BAAAb,EAAA,sEACMC,MAAM,cAAD,OAAeL,EAAf,gBAA0C,CAChEM,OAAQ,OACRG,KAAMS,KAAKC,UAAU,CAAEtB,WAAUC,KAAMiB,IACvCK,QAAS,CACL,eAAgB,sBALT,cACTb,EADS,gBAQIA,EAAOC,OARX,OAQTC,EARS,OASfP,EAAeO,GACfK,EAAY,IACZE,EAAe,IAXA,2CAAH,qDAchB,OACI,qCACI,sBAAK5C,UAAU,kBAAf,UACI,uBAAOiD,QAAQ,YAAf,mBACA,uBAAOC,KAAK,OAAOlD,UAAU,eAAeK,GAAG,YAAY8C,MAAO1B,EAAU2B,SAAU,SAACC,GAAD,OAAWX,EAAYW,EAAM7C,OAAO2C,aAE9H,sBAAKnD,UAAU,aAAf,UACI,uBAAOiD,QAAQ,eAAf,sBACA,0BAAUjD,UAAU,eAAeK,GAAG,eAAeiD,KAAK,IAAIH,MAAOR,EAAaS,SAAU,SAACC,GAAD,OAAWT,EAAeS,EAAM7C,OAAO2C,aAEvI,wBAAQnD,UAAU,2BAA2BsC,QAAS,kBAAMO,KAA5D,6BC9BG,MAA0B,yCCQ1BU,EAJM,kBACjB,cAAC,EAAD,CAAQ1D,QAAQ,iBAAiBC,WAAW,YAAYC,MAAOK,KCLpD,MAA0B,kCC6C1BoD,EAnCK,SAAC,GAAe,IAC1BxC,EADyB,EAAZyC,MACAC,OAAO1C,KACpBH,EAAUQ,EAAesC,MAAK,SAAA9C,GAAO,OAAIA,EAAQG,OAASA,KAFjC,EAIOyB,mBAAS,CAAEZ,QAAS,EAAGN,SAAU,KAJxC,mBAIxBqC,EAJwB,KAIX9B,EAJW,KAgB/B,GAVA+B,qBAAU,WACNC,OAAOC,SAAS,EAAG,GACJ,uCAAG,8BAAA/B,EAAA,sEACOC,MAAM,cAAD,OAAejB,IAD3B,cACRmB,EADQ,gBAEKA,EAAOC,OAFZ,OAERC,EAFQ,OAGdP,EAAeO,GAHD,2CAAH,oDAKf2B,KACD,CAAChD,KAECH,EAAS,OAAO,cAAC,EAAD,IAErB,IAAMoD,EAAgB5C,EAAe6C,QAAO,SAAArD,GAAO,OAAIA,EAAQG,OAASA,KAExE,OACI,qCACA,cAAC,EAAD,CAAQnB,QAASgB,EAAQI,MAAOlB,MAAOK,IACvC,sBAAKC,GAAG,YAAR,UACI,cAACQ,EAAQM,QAAT,IACA,cAAC,EAAD,CAAgBS,YAAaZ,EAAMa,QAAS+B,EAAY/B,QAASC,eAAgBA,IACjF,cAAC,EAAD,CAAcP,SAAUqC,EAAYrC,WACpC,cAAC,EAAD,CAAgBK,YAAaZ,EAAMc,eAAgBA,IACnD,oBAAI9B,UAAU,YAAd,SAA0B,kDAC1B,cAAC,EAAD,CAAcW,SAAUsD,WCbrBE,EAvBA,kBACX,qBAAKnE,UAAU,iDAAiDK,GAAG,UAAnE,SACI,sBAAKL,UAAU,YAAf,UACI,wBAAQA,UAAU,sCAAsCkD,KAAK,SAASkB,cAAY,WAAWC,cAAY,oBAAoBC,gBAAc,mBAAmBC,gBAAc,QAAQC,aAAW,oBAA/L,kBAGA,qBAAKxE,UAAU,2BAA2BK,GAAG,mBAA7C,SACI,qBAAIL,UAAU,qBAAd,UACI,oBAAIA,UAAU,kBAAd,SACI,cAAC,IAAD,CAAMe,GAAG,IAAT,oBAEJ,oBAAIf,UAAU,WAAd,SACI,cAAC,IAAD,CAAMe,GAAG,SAAT,qBAEJ,oBAAIf,UAAU,WAAd,SACI,cAAC,IAAD,CAAMe,GAAG,cAAT,mC,aCYT0D,MAnBf,WACE,OACE,cAAC,IAAD,UACE,sBAAKzE,UAAU,MAAf,UACE,cAAC,EAAD,IAEE,eAAC,IAAD,WACE,cAAC,IAAD,CAAO0E,KAAK,IAAIC,UAAYxE,EAAWyE,OAAK,IAC5C,cAAC,IAAD,CAAOF,KAAK,SAASC,UAAYrE,IACjC,cAAC,IAAD,CAAOoE,KAAK,cAAcC,UAAYvD,IACtC,cAAC,IAAD,CAAOsD,KAAK,eAAeC,UAAYnB,IACvC,cAAC,IAAD,CAAOmB,UAAYpB,aCVhBsB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f923665c.chunk.js","sourcesContent":["import React from 'react';\n// import Background from './img/home-bg.jpg'\n\nconst Header = ({heading, subheading, image}) => (\n    <header className=\"masthead\" style={{backgroundImage: \"url(\" + image + \")\"}}>\n        <div className=\"overlay\"></div>\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col-lg-8 col-md-10 mx-auto\">\n                <div className=\"site-heading\">\n                    <h1>{heading}</h1>\n                    <span className=\"subheading\">{subheading}</span>\n                </div>\n            </div>\n        </div>\n        </div>\n    </header>\n);\n\nexport default Header;","export default __webpack_public_path__ + \"static/media/home-bg.f65f12b6.jpg\";","import React from 'react'; // Maybe I can remove it\nimport Header from '../Header';\nimport Background from '../img/home-bg.jpg'\n\nconst HomePage = () => (\n    <>\n    {/* <h1>Welcome to My Python Blog</h1> */}\n    <Header heading={\"Python Blog\"} subheading={\"A blog by Tomer Lieber\"} image={Background} />\n    <div id=\"page-body\">\n        <p>\n            Welcome to my new blog about Python!\n            The blog contains mostly posts about Python at a basic level. \n            It will help people who want to learn the language. \n            However, even people who already know the language will be able to find helpful posts here.\n            Feel free to comment on the posts and give a like if you liked what you read.\n        </p>\n    </div>\n    </>\n);\n\nexport default HomePage;","export default __webpack_public_path__ + \"static/media/about-bg.7786f7ee.jpg\";","import React from 'react'; // Maybe I can remove it\nimport Header from '../Header';\nimport Background from '../img/about-bg.jpg'\n\nconst AboutPage = () => (\n    <>\n    {/* <h1>About me</h1> */}\n    <Header heading={\"About Me\"} subheading={\"This is what I do\"} image={Background}/>\n    <div id=\"page-body\">\n        <p>\n            Hey, my name is Tomer.\n            As a software developer with 4 years of experience, I advocate the principle of code reuse.\n            So, instead of telling about myself here, I invite you to \n            visit <a href=\"https://www.linkedin.com/in/tomer-lieber/\" target=\"_blank\" rel=\"noopener noreferrer\">my linkein profile</a> and know me better.\n        </p>\n    </div>\n    </>\n);\n\nexport default AboutPage;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst ArticlesList = ({ articles }) => (\n    <>\n    {articles.map((article, key) => (\n        <Link className=\"article-list-item\" key={key} to={`/posts/${article.name}`}>\n            <h3>{article.title}</h3>\n            <p>{article.introduction}</p>\n        </Link>\n    ))}\n    </>\n);\n\nexport default ArticlesList;","import PythonBasics from './content/PythonBasics';\nimport Comment from './content/Comments';\nimport ZenOfPython from './content/ZenOfPython';\nimport BasicTypes from './content/BasicTypes';\nimport BasicOutput from './content/BasicOutput';\nimport BasicUserInput from './content/BasicUserInput';\nimport CallingFunctions from './content/CallingFunctions';\nimport CreatingFunctions from './content/CreatingFunctions';\nimport UsingModules from './content/UsingModules';\nimport CreatingModules from './content/CreatingModules';\n\nconst articles = [\n    {\n        name: 'python-basics',\n        title: 'Python Basics',\n        introduction: \"A short tutorial how to install an IDE for Python and run your first program\",\n        content: PythonBasics\n    },\n    {\n        name: 'comments',\n        title: 'Comments',\n        introduction: \"When writing code in any programming language, it's important to make the code readable and clear so other people (include you) can easily maintain and develop the program. One way to do it is to use comments\",\n        content: Comment\n    },\n    {\n        name: 'zen-of-python',\n        title: 'Zen of Python',\n        introduction: \"The Zen of Python is a collection of 19 guidelines for the design of the Python programming language. The purpose of these guidelines is to make the code more readable and simple so it can be easily understood\",\n        content: ZenOfPython\n    },\n    {\n        name: 'basic-types',\n        title: 'Basic Types in Python',\n        introduction: \"In Python there are 5 basic types: Integers, Floating-Point Numbers, Complex Numbers, Strings and Boolean\",\n        content: BasicTypes\n    },\n    {\n        name: 'basic-output',\n        title: 'Basic Output',\n        introduction: \"The print() function prints the given object to the screen. The object will be converted into a string before written to the screen\",\n        content: BasicOutput\n    },\n    {\n        name: 'basic-user-input',\n        title: 'Basic User Input',\n        introduction: \"Programs sometimes need to interact with users through the keyboard. In Python 3, the function input() is used for it\",\n        content: BasicUserInput\n    },\n    {\n        name: 'calling-functions',\n        title: 'Calling Functions',\n        introduction: \"The Python programming language comes with a variety of build-in functions. Some functions are part of the base language and others require you to import from python modules\",\n        content: CallingFunctions\n    },\n    {\n        name: 'creating-functions',\n        title: 'Creating Functions',\n        introduction: \"As you can see in the previous post, Python gives you many built-in functions like print(), input() etc. But you can also create your own functions\",\n        content: CreatingFunctions\n    },\n    {\n        name: 'using-modules',\n        title: 'Using Modules',\n        introduction: \"A module is a file containing a set of functions and constants\",\n        content: UsingModules\n    },\n    {\n        name: 'creating-modules',\n        title: 'Creating Modules',\n        introduction: \"To create a module save the code you want in a file with the file extension .py\",\n        content: CreatingModules\n    }\n];\n\nexport default articles;","import React from 'react'; // Maybe I can remove it\n\nconst PythonBasics = () => (\n    <>\n    {/* <h1>Python Basics</h1> */}\n    <ol>\n        <li>Go to the website <a href=\"https://thonny.org/\" target=\"_blank\" rel=\"noopener noreferrer\">https://thonny.org/</a> and download Thonny.</li>\n        <li>Open Thonny.</li>\n        <li>Write in the code window called &lt;untitled&gt; the following line code:<br/><code>print(\"Hello World!\")</code></li>\n        <li>Click on the save button and save the file on your computer. A reasonable name for the file is HelloWorld.</li>\n        <li>Click on the run current script button . You can see that in the shell window your program ran and printed Hello world!</li>\n        <li>Congratulation!<br/>\n            You have successfully run your first python program.</li>\n    </ol>\n    </>\n);\n\nexport default PythonBasics;","import React from 'react'; // Maybe I can remove it\n\nconst Comments = () => (\n    <>\n    {/* <h1>Comments</h1> */}\n    <p>When writing code in any programming language, it's important to make the code readable and clear so other people (include you) can easily maintain and develop the program. One way to do it is to use comments.</p>\n    <p>In python there are two types of comments:</p>\n    <ol>\n        <li>\n            <b>Single-line</b> comments are created by beginning with the hash (#) character, and they are automatically terminated by the end of line.<br/>\n            <code>\n            # This is a single-line comment in python\n            </code>\n        </li>\n        <li>\n            <b>Multi-line</b> comments are created by adding a delimiter (\"\"\") on the beginning and on the end of the comment.<br/>\n            <code>\n            \"\"\" This is a <br/>\n            multi-line comment <br/>\n            in python\"\"\"\n            </code>\n        </li>\n    </ol>\n    </>\n);\n\nexport default Comments;","import React from 'react'; // Maybe I can remove it\n\nconst ZenOfPython = () => (\n    <>\n    {/* <h1>Zen of Python</h1> */}\n    <p>The <b>Zen of Python</b> is a collection of 19 guidelines for the design of the Python programming language. \n        The purpose of these guidelines is to make the code more readable and simple so it can be easily understood. \n        To watch the full collection click\n        <a href=\"https://en.wikipedia.org/wiki/Zen_of_Python\" target=\"_blank\" rel=\"noopener noreferrer\"> here</a>.</p>\n    <p>Here is my thought on some items found within that document:</p>\n    <ol>\n        <li>\n            <b>Beautiful is better than ugly</b><br/>\n            This guideline makes sense and of course that no one want to write ugly code, so I will give an example of common case that we might write ugly code instead of pretty code.<br/>\n            <code>\n            Ugly:<br/>\n            if boolean_condition:<br/>\n            &emsp;&emsp;a = True<br/>\n            else:<br/>\n            &emsp;&emsp;a = false<br/>\n            \n            Pretty:<br/>\n            a = boolean_condition\n            </code>\n        </li>\n        <li>\n            <b>Sparse is better than dense</b><br/>\n            Programmers sometimes like to write their code as short as possible even if it comes at the expense of readability. These cases should be avoided.\n            For example:<br/>\n            <code>\n            Dense:<br/>\n            print(math.sqrt(((a + b + c) / 2) * (((a + b + c) / 2) - a) * (((a + b + c) / 2) - b) * (((a + b + c) / 2)<br/>\n\n            Sparse:<br/>\n            s = (a + b + c) / 2<br/>\n            areaSquared = s * (s - a) * (s - b) * (s - c)<br/>\n            area = math.sqrt(areaSquared)<br/>\n            print(area)\n            </code>\n        </li>\n        <li>\n            <b>Readability counts</b><br/>\n            You should give meaningful names to variables and functions. Avoid unnecessary variables. In fact, as mentioned above all the <b>Zen of Python</b> guidelines make the code more readable.\n            For example:<br/>\n            <code>\n            Unreadable:<br/>\n            a1 = x<br/>\n            a2 = a1 + y<br/>\n            a3 = a2 + z<br/>\n            a4 = a3 + w<br/>\n\n            Readable:<br/>\n            sum = x<br/>\n            sum += y<br/>\n            sum += z<br/>\n            sum += w<br/>\n            </code>\n        </li>\n    </ol>\n    </>\n);\n\nexport default ZenOfPython;","import React from 'react'; // Maybe I can remove it\n\nconst BasicTypes = () => (\n    <>\n    {/* <h1>Basic Types</h1> */}\n    <p>In Python there are 5 basic types: Integers, Floating-Point Numbers, Complex Numbers, Strings and Boolean.</p>\n    <p>Before I explain how to create and use the basic types in Python, note that Python is dynamic language unlike java and c# which are static languages. It means that variables need not be declared or defined. To create a variable, you just assign it a value and then start using it. Assignment is done with a single equals sign (=).</p>\n    <ol>\n        <li>\n            <h4>Integers</h4>\n            <p>The int type in Python designates an integer number.</p>\n            <code>\n                <br/>\n                <u>create:</u><br/>\n                num1 = 3<br/>\n                <br/>\n                <u>use:</u><br/>\n                --&gt; print(num1 + 1)<br/>\n                4\n            </code>\n        </li>\n        <li>\n            <h4>Floating-Point Numbers</h4>\n            <p>The float type in Python designates a floating-point number. float values are specified with a decimal point. \n                Optionally, the character e or E followed by a positive or negative integer may be appended to \n                specify <a href=\"https://en.wikipedia.org/wiki/Scientific_notation\" target=\"_blank\" rel=\"noopener noreferrer\">scientific notation</a>.\n            </p>\n            <code>\n                <br/>\n                <u>create:</u><br/>\n                num2 = 3.5<br/>\n                num3 = 4e7<br/>\n                <br/>\n                <u>use:</u><br/>\n                --&gt; print(num3 + 1)<br/>\n                40000001.0\n            </code>\n        </li>\n        <li>\n            <h4>Complex Numbers</h4>\n            <p>The complex type in Python designates a complex number. Complex numbers are specified as <code>&lt;real part&gt; + &lt;imaginary part&gt;j</code></p>\n            <code>\n                <br/>\n                <u>create:</u><br/>\n                num4 = 2+3j<br/>\n                <br/>\n                <u>use:</u><br/>\n                --&gt; print(num4 + 1 + 1j)<br/>\n                (3+4j)\n            </code>\n        </li>\n        <li>\n            <h4>Strings</h4>\n            <p>The <code>str</code> type in Python designates a string. A string is a sequence of characters that is delimited by single or double quotes.</p>\n            <code>\n                <br/>\n                <u>create:</u><br/>\n                str = \"Hello World\"<br/>\n                <br/>\n                <u>use:</u><br/>  \n                --&gt; print(str + \", Tomer\")<br/>\n                Hello World, Tomer<br/>\n            </code>\n        </li>\n        <li>\n            <h4>Boolean</h4>\n            <p>The <code>bool</code> type in Python designates a boolean. Variables of Boolean type may have one of two values: <code>True</code> or <code>False</code>.</p>\n            <code>\n                <br/>\n                <u>create:</u><br/>\n                bool = True<br/>\n                <br/>\n                <u>use:</u><br/>\n                --&gt; print(bool)<br/>\n                True\n            </code>\n        </li>\n    </ol>\n    </>\n);\n\nexport default BasicTypes;","import React from 'react'; // Maybe I can remove it\n\nconst BasicOutput = () => (\n    <>\n    {/* <h1>Basic Output</h1> */}\n    <p>The <code>print()</code> function prints the given object to the screen. The object will be converted into a string before written to the screen.</p>\n    <p>\n        <b>Example 1</b> - How to print one object:<br/>\n        <code>\n        <br/>\n        --&gt; print(\"Hello World);<br/>\n        Hello World<br/>\n        <br/>\n        --&gt; print(34);<br/>\n        34<br/>\n        </code>\n    </p>\n    <p>\n        <b>Example 2</b> - How to print more than one object:<br/>\n        <code>\n        <br/>\n        --&gt; print(\"Hello World\", \"Tomer\");<br/>\n        Hello World Tomer<br/>\n        <br/>\n        --&gt; print(\"My favorite number is:\", 10);<br/>\n        My favorite number is: 10\n        </code>\n    </p>\n    <p>* Put attention that the default separator between objects is space (\" \"). You can change it in the following way:</p>\n    <code>\n        --&gt; print(866, 326, 7484, sep=\"-\");<br/>\n        866-326-7484\n        </code>\n        <p>* Another thing that you can notice is that the newline character is printed at the end of the line, so each line is printed in a new line. You can change it in the following way:</p>\n        <code>\n        --&gt;print(\"Hello,\", end=\" \");<br/>\n        --&gt;print(\"how are you?\");<br/>\n        Hello, how are you?<br/><br/>\n    </code>\n    <p>\n        <b>Example 3</b> - How to control the size of float output:<br/>\n        <p>First, we use &#123;:f&#125; in order to format float number. Second, we specify two numbers on both sides of a point &#123;:10.2f&#125;. The left number represents the length of the complete output, and the right number limits the number of positions after the decimal point.</p>\n        <code>\n            --&gt; print('&#123;:10.2f&#125;'.format(3.141592653589793));<br/>\n            3.14\n        </code>\n        <p>In this example we want our output to have at least 10 characters with 2 after the decimal point.</p>\n    </p>\n    </>\n);\n\nexport default BasicOutput;","import React from 'react'; // Maybe I can remove it\n\nconst BasicUserInput = () => (\n    <>\n    {/* <h1>Basic User Input</h1> */}\n    <p>Programs sometimes need to interact with users through the keyboard. In Python 3, the function <code>input()</code> is used for it.</p>\n    <p>\n        <b>Example 1</b><br/>\n        Ask for the name of the user and print it:<br/>\n        <code>\n            --&gt; print(\"Enter your name: \")<br/>\n            --&gt; name = input()<br/>\n            --&gt; print(\"Hello \" + name)<br/>\n            Enter your name:<br/>\n            Tomer<br/>\n            Hello Tomer\n        </code>\n    </p>\n    <p>\n        <b>Example 2</b><br/>\n        You can use the prompt parameter to write a message before the input:<br/>\n        <code>\n            --&gt; name = input(\"Enter your name: \")<br/>\n            --&gt; print(\"Hello \" + name)<br/>\n            Enter your name: Tomer<br/>\n            Hello Tomer\n        </code>\n    </p>\n    <p>\n        <b>Example 3</b><br/>\n        The <code>input()</code> function converts the input it receives into a string.\n        In order to handle input of data type numbers, you may use the function <code>int()</code>.\n        This function tries to convert the string into an integer, otherwise, it throws an exception.<br/>\n        <code>\n            --&gt; age = input(\"Enter your age: \")<br/>\n            --&gt; print(\"Next year you will be \" + (age + 1) + \" years old\")<br/>\n            Enter your age: 25<br/>\n            Next year you will be 26 years old\n        </code>\n    </p>\n    </>\n);\n\nexport default BasicUserInput;","import React from 'react'; // Maybe I can remove it\n\nconst CallingFunctions = () => (\n    <>\n    {/* <h1>Calling Functions</h1> */}\n    <p>The Python programming language comes with a variety of build-in functions. Some functions are part of the base language and others require you to import from python modules.</p>\n    <p>\n        <b>Calling a function</b><br/>\n        To call a function, use the function name followed by parenthesis:<br/>\n        <code>input()</code>\n    </p>\n    <p>\n        <b>Calling a function with parameters</b><br/>\n        Parameters are specified after the function name, inside the parentheses. Parameters are separated with a comma:<br/>\n        <code>print(\"Hello World\", \"Tomer\")</code>\n    </p>\n    <p>\n        <b>Calling a function that requires to import from python modules</b><br/>\n        To import a moudle, we use the <code>import</code> statement. Then to call the function we use the syntax: <code>module_name.function_name</code>.<br/>\n        <code>\n            import math<br/>\n            print(math.sqrt(9))\n        </code>\n    </p>\n    </>\n);\n\nexport default CallingFunctions;","import React from 'react'; // Maybe I can remove it\n\nconst CreatingFunctions = () => (\n    <>\n    {/* <h1>Creating Functions</h1> */}\n    <p>As you can see in the previous post, Python gives you many built-in functions like <code>print(), input()</code> etc. But you can also create your own functions. </p>\n    <p>\n        <b>Definition</b><br/>\n        A function is a block of code that is used to preform a single task . Functions provide better modularity for your program and a high degree of code reusing.\n    </p>\n    <b>Creating a function</b>\n    <ol>\n        <li>A function begin with the keyword def followed by the function name and parentheses.</li>\n        <li>Arguments are placed within these parentheses and separated with a comma.</li>\n        <li>The code within a function starts after a colon (:) and is indented.</li>\n        <li>A function can return an expression to the caller.</li>\n    </ol>\n    <p>\n        <u>Example:</u><br/>\n        <code>\n            def sayHello(name):<br/>\n            &emsp;&emsp;print(\"Hello\", name)\n        </code>\n    </p>\n    <p>\n        <b>Can you have more than one function with the same name?</b> Yes! but....<br/>\n        You can have more than one function with the same name (this called Function Overloading), but can only use the latest defined function.\n    </p>\n    <code>\n        def sayHello(firstName):<br/>\n        &emsp;&emsp;print(\"Hello\", firstName)<br/>\n        def sayHello(firstName, lastName):<br/>\n        &emsp;&emsp;print(\"Hello\", firstName, lastName)\n    </code>\n    <p>\n        <code>sayHello(\"Tomer\", \"Lieber\")</code> - this line will call the second function.<br/>\n        But,<br/>\n        <code>sayHello(\"Tomer\")</code> - this line will produce an error because the latest defined sayHello function takes two arguments.\n    </p>\n    </>\n);\n\nexport default CreatingFunctions;","import React from 'react'; // Maybe I can remove it\n\nconst UsingModules = () => (\n    <>\n    {/* <h1>Using Modules</h1> */}\n    <p>\n        <b>Definition</b><br/>\n        A file containing a set of functions and constants.\n    </p>\n    <p>\n        <b>Use a Module</b><br/>\n        We can use the module, by using the <code>import</code> statement.<br/>\n        <code>\n        import math<br/>\n        print(math.sqrt(3))\n        </code>\n    </p>\n    <p>\n        Another way to use a module is to import only parts from the module, by using the <code>from</code> keyword.<br/>\n        <code>\n        from math import exp<br/>\n        print(exp(1))\n        </code>\n    </p>\n    </>\n);\n\nexport default UsingModules;","import React from 'react'; // Maybe I can remove it\n\nconst CreatingModules = () => (\n    <>\n    {/* <h1>Creating Modules</h1> */}\n    <p><b>Create a Module</b><br/>\n        To create a module save the code you want in a file with the file extension .py\n    </p>\n    <p>\n        <u>Example:</u><br/>\n        Save this code in a file named myModule.py.\n    </p>\n    <br/>\n    <code>\n        def sayBye(name):<br/>\n        &emsp;&emsp;print(\"Bye Bye, \" + name)\n    </code>\n    <p>\n        And that's it, now you have a model that ready to use!<br/>\n        <br/>\n        * If you haven't read the previous post, feel free to do so as it explains how to use a model.\n    </p>\n    </>\n);\n\nexport default CreatingModules;","export default __webpack_public_path__ + \"static/media/articles-bg.a8d27ef3.jpg\";","import React from 'react';\nimport ArticlesList from '../components/ArticlesList';\nimport articleContent from './article-content';\nimport Header from '../Header';\nimport Background from '../img/articles-bg.jpg'\n\nconst ArticlesListPage = () => (\n    <>\n    <Header heading={\"Articles\"} subheading={\"A list of great articles about Python\"} image={Background}/>\n    <div id=\"page-body\">\n        {/* <h1 className=\"mb-4\">Articles</h1> */}\n        <ArticlesList articles={articleContent} />\n    </div>\n\n    </>\n);\n\nexport default ArticlesListPage;","import React from 'react';\n\nconst CommentsList = ({ comments }) => (\n    <>\n    <h2><u>Comments:</u></h2>\n    {comments.map((comment, key) => (\n        <div className=\"comment\" key={key}>\n            <h4>{comment.username}</h4>\n            <p>{comment.text}</p>\n        </div>\n    ))}\n    </>\n);\n\nexport default CommentsList;","import React from 'react';\n\nconst UpvotesSection = ({ articleName, upvotes, setArticleInfo }) => {\n    const upvoteArticle = async () => {\n        const result = await fetch(`/api/posts/${articleName}/upvote`, {\n            method: 'post',\n        });\n        const body = await result.json();\n        setArticleInfo(body);\n    }\n    return (\n        <div className=\"mt-5 mb-4\" id=\"upvotes-section\">\n            <button onClick={() => upvoteArticle()} className=\"btn btn-danger btn-lg\">\n                <span className=\"glyphicon glyphicon-heart\" aria-hidden=\"true\"></span> Like\n            </button>\n            <p>The post recieved {upvotes} likes</p>\n        </div>\n    );\n}\n\nexport default UpvotesSection;","import React, { useState } from 'react';\n\nconst AddCommentForm = ({ articleName, setArticleInfo }) => {\n    const [username, setUsername] = useState('');\n    const [commentText, setCommentText] = useState('');\n\n    const addComment = async () => {\n        const result = await fetch(`/api/posts/${articleName}/add-comment`, {\n            method: 'post',\n            body: JSON.stringify({ username, text: commentText }),\n            headers: {\n                'Content-Type': 'application/json',\n            }\n        });\n        const body = await result.json();\n        setArticleInfo(body);\n        setUsername('');\n        setCommentText('');\n    }\n\n    return (\n        <>\n            <div className=\"from-group mt-4\">\n                <label htmlFor=\"inputName\">Name:</label>\n                <input type=\"text\" className=\"form-control\" id=\"inputName\" value={username} onChange={(event) => setUsername(event.target.value)} />\n            </div>\n            <div className=\"form-group\">\n                <label htmlFor=\"inputComment\">Comment:</label>\n                <textarea className=\"form-control\" id=\"inputComment\" rows=\"3\" value={commentText} onChange={(event) => setCommentText(event.target.value)}></textarea>\n            </div>\n            <button className=\"btn btn-dark btn-lg mb-4\" onClick={() => addComment()}>Add Comment</button>\n        </>\n    );\n}\n\nexport default AddCommentForm;","export default __webpack_public_path__ + \"static/media/not-found-bg.dd567ccb.jpg\";","import React from 'react';\nimport Header from '../Header';\nimport Background from '../img/not-found-bg.jpg'\n\nconst NotFoundPage = () => (\n    <Header heading=\"Page Not Found\" subheading=\"404 error\" image={Background}/>\n);\n\nexport default NotFoundPage;","export default __webpack_public_path__ + \"static/media/posts.9d312ba1.jpg\";","import React, { useState, useEffect } from 'react'; // Maybe I can remove React here\nimport ArticlesList from '../components/ArticlesList';\nimport CommentsList from '../components/CommentsList';\nimport UpvotesSection from '../components/UpvotesSection';\nimport AddCommentForm from '../components/AddCommentForm';\nimport articleContent from './article-content';\nimport NotFoundPage from './NotFoundPage';\nimport Header from '../Header';\nimport Background from '../img/posts.jpg'\n\nconst ArticlePage = ({ match }) => {\n    const name = match.params.name;\n    const article = articleContent.find(article => article.name === name);\n\n    const [articleInfo, setArticleInfo] = useState({ upvotes: 0, comments: [] });\n\n    useEffect(() => {\n        window.scrollTo(0, 0);\n        const fetchData = async () => {\n            const result = await fetch(`/api/posts/${name}`);\n            const body = await result.json();\n            setArticleInfo(body);\n        }\n        fetchData();\n    }, [name]);\n\n    if (!article) return <NotFoundPage />\n    \n    const otherArticles = articleContent.filter(article => article.name !== name);\n\n    return (\n        <>\n        <Header heading={article.title} image={Background}/>\n        <div id=\"page-body\">\n            <article.content/>\n            <UpvotesSection articleName={name} upvotes={articleInfo.upvotes} setArticleInfo={setArticleInfo} />\n            <CommentsList comments={articleInfo.comments} />\n            <AddCommentForm articleName={name} setArticleInfo={setArticleInfo} />\n            <h2 className=\"mt-5 mb-4\"><u>Other Articles:</u></h2>\n            <ArticlesList articles={otherArticles} />\n        </div>\n        </>\n    );\n}\n\nexport default ArticlePage;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst NavBar = () => (\n    <nav className=\"navbar navbar-expand-lg navbar-light fixed-top\" id=\"mainNav\">\n        <div className=\"container\">\n            <button className=\"navbar-toggler navbar-toggler-right\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarResponsive\" aria-controls=\"navbarResponsive\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                Menu\n            </button>\n            <div className=\"collapse navbar-collapse\" id=\"navbarResponsive\">\n                <ul className=\"navbar-nav mx-auto\">\n                    <li className=\"nav-item active\">\n                        <Link to=\"/\">Home</Link>\n                    </li>\n                    <li className=\"nav-item\">\n                        <Link to=\"/about\">About</Link>\n                    </li>\n                    <li className=\"nav-item\">\n                        <Link to=\"/posts-list\">Articles</Link>\n                    </li>\n                </ul>\n            </div>\n        </div>\n    </nav>\n);\n\nexport default NavBar;","import HomePage from './pages/HomePage';\nimport AboutPage from './pages/AboutPage';\nimport ArticlesListPage from './pages/ArticlesListPage';\nimport ArticlePage from './pages/ArticlePage';\nimport NotFoundPage from './pages/NotFoundPage';\nimport NavBar from './NavBar';\n\nimport { BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport './App.css';\n\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <NavBar />\n        {/* <div id=\"page-body\"> */}\n          <Switch>\n            <Route path=\"/\" component={ HomePage } exact />\n            <Route path=\"/about\" component={ AboutPage } />\n            <Route path=\"/posts-list\" component={ ArticlesListPage } />\n            <Route path=\"/posts/:name\" component={ ArticlePage } />\n            <Route component={ NotFoundPage } />\n          </Switch>\n        {/* </div> */}\n      </div>\n    </Router>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import 'whatwg-fetch'; // Make that we can use the function 'fetch' in unsupported broswers like internet explorer\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}